// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"github.com/state303/go-discogs/src/reference"
	"github.com/state303/go-discogs/src/types"
)

const TableNameReleaseCreditedArtist = "release_credited_artist"

// ReleaseCreditedArtist mapped from table <release_credited_artist>
type ReleaseCreditedArtist struct {
	ReleaseID int32   `gorm:"column:release_id;type:integer;primaryKey" json:"release_id"`
	ArtistID  int32   `gorm:"column:artist_id;type:integer;primaryKey" json:"artist_id"`
	RoleHash  int64   `gorm:"column:role_hash;type:bigint;primaryKey" json:"role_hash"` // fnv32 encoded hash from role
	Role      *string `gorm:"column:role;type:character varying(10000)" json:"role"`    // role of an artist for a release
}

func (a *ReleaseCreditedArtist) References() []reference.Reference {
	return []reference.Reference{
		&Reference{a.ArtistID, types.ARTIST},
	}
}

// TableName ReleaseCreditedArtist's table name
func (*ReleaseCreditedArtist) TableName() string {
	return TableNameReleaseCreditedArtist
}
